# variables
# --------------------------------------------
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set cursorpreviewfmt "\033[7m"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'


# functions
# --------------------------------------------
# open files
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
    	text/*|application/json|application/javascript|inode/x-empty) $EDITOR $fx;;
		application/pdf|image/vnd.djvu|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
    	image/*) nsxiv -- $f ;;
    	audio/*) mpv --audio-display=no $f ;;
		video/*) setsid -f mpv $f > /dev/null 2>&1 ;;
    	*) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

# extract compressed files
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# delete files
cmd delete ${{
	$HOME/Development/script/programs/lf/cow-delete.sh $fx	
}}

# set wallpaper
cmd wallpaper ${{
	# feh --bg-fill --no-fehbg -z $f &
	swww img $f --transition-type random
}}

cmd bulkrename $vidir


# keybindings
# --------------------------------------------
map D delete
map E extract
map <enter> shell

# set current image as wallpaper
map W wallpaper

# execute current file
# map x $$f   
# map X !$f

# dedicated keys for file opener actions
# map o &mimeopen $f
# map O $mimeopen --ask $f

# rename files
map r rename # before extension
map R push r<c-u> # with basename deleted
#map I push A<c-a> # at the very beginning
#map i push A<a-b><a-b><a-f> # before extension
#map a push A<a-b> # after extension

map V push :!nvim<space>
map M push :$mkdir<space>
map B bulkrename
